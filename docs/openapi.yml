openapi: 3.0.0
info:
  title: Silverbox
  version: 1.2.1
  license:
    name: MIT
    url: https://github.com/heseya/silverbox/blob/master/LICENSE
  description: >
    ## CLI

    ### Create API client

    This command creates a new api token.


    ```
    php silverbox clients:add {clientName}
    ```

    ### Show list of all clients

    ```
    php silverbox clients:show
    ```

    ### Remove API client

    ```
    php silverbox clients:remove {name} {-f|--with-files}
    ```

    ### Remove all client files

    ```
    php silverbox clients:truncate {name}
    ```

externalDocs:
  url: https://github.com/heseya/silverbox
  description: GitHub

paths:
  /{client}:
    parameters:
      - name: client
        in: path
        required: true
        description: Client name
        schema:
          type: string
    post:
      summary: Upload a file
      operationId: file-upload
      tags:
        - Files
      security:
        - apiKey: []
      parameters:
        - name: private
          in: query
          required: false
          schema:
            type: boolean
          description: Flag that determines the visibility of the file.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: You can use any name you like and send as many files as you like at once.
      responses:
        '201':
          description: File successfully uploaded
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/File'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /{client}/{file}:
    parameters:
      - name: client
        in: path
        required: true
        description: Client name
        schema:
          type: string
      - name: file
        in: path
        required: true
        description: The id of the file to retrieve
        schema:
          type: string
    get:
      parameters:
        - name: h
          in: query
          required: false
          description: Height in px
          schema:
            type: number
        - name: w
          in: query
          required: false
          description: Width in px
          schema:
            type: number
        - name: format
          in: query
          required: false
          description: Format of the image
          schema:
            type: string
            enum: [webp, avif]
      summary: Get a file
      operationId: file-get
      description: If you want to download a private file, you must use the default header for authentication.
      tags:
        - Files
      responses:
        '200':
          description: Binary file
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      summary: Change file path
      operationId: file-update
      tags:
        - Files
      security:
        - apiKey: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - slug
              properties:
                slug:
                  description: New file name
                  type: string
                  example: new-file-name
      responses:
        '200':
          description: Info about file
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
        '500':
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete a file
      operationId: file-delete
      tags:
        - Files
      security:
        - apiKey: []
      responses:
        '204':
          description: File successfully deleted
        '500':
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /{client}/{file}/info:
    parameters:
      - name: client
        in: path
        required: true
        description: Client name
        schema:
          type: string
      - name: file
        in: path
        required: true
        description: The id of the file to retrieve
        schema:
          type: string
    get:
      summary: File info
      operationId: file-info
      tags:
        - Files
      security:
        - apiKey: []
      responses:
        '200':
          description: Info about file
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/File'
        '500':
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    File:
      type: object
      properties:
        name:
          type: string
          example: '8BgXSCaMZae9auk1kVA9tRP2Km1CzvKsyE8ml8R0.jpg'
        owner:
          type: string
          example: client
        visibility:
          type: string
          enum:
            - public
            - private
          example: public
        path:
          type: string
          example: 'client/8BgXSCaMZae9auk1kVA9tRP2Km1CzvKsyE8ml8R0.jpg'
          description: 'file path without domain'
        mime:
          type: string
          example: 'image/jpeg'
        size:
          type: number
          example: 142083
          description: 'size of a file in bytes'
        lastModified:
          type: number
          example: 1640104826
          description: 'UNIX timestamp of the last time the file was modified'
    Error:
      type: object
      properties:
        message:
          type: string
          example: An error occurred.
        code:
          type: number
          example: 500
  securitySchemes:
    apiKey:
      type: apiKey
      in: header
      name: x-api-key
